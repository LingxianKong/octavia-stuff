=====================================================

因为在安装devstack时，我们使用mitaka版本的octavia与liberty版本的neutron/neutron-lbaas集成，在启动octavia服务时，会有很多依赖包的版本不对，导致octavia进程启动失败。比如：

Traceback (most recent call last):
  File "/usr/local/bin/octavia-worker", line 6, in <module>
    from octavia.cmd.octavia_worker import main
  File "/opt/stack/octavia/octavia/cmd/octavia_worker.py", line 23, in <module>
    from octavia.common import service as octavia_service
  File "/opt/stack/octavia/octavia/common/service.py", line 18, in <module>
    from octavia.common import config
  File "/opt/stack/octavia/octavia/common/config.py", line 35, in <module>
    cfg.PortOpt('bind_port', default=9876,
AttributeError: 'module' object has no attribute 'PortOpt'

我的解决方法是创建virtualenv，在virtualenv中安装octavia及其依赖，并在virtualenv中启动octavia相关服务。以octavia-api为例：

sudo pip install virtualenvwrapper
export WORKON_HOME=~/Envs
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
mkdir -p $WORKON_HOME
source /usr/local/bin/virtualenvwrapper.sh  
mkvirtualenv octavia
cd /opt/stack/octavia && pip install -r requirements.txt
python setup.py install

修改octavia.conf配置文件，
debug = True
loadbalancer_topology = ACTIVE_STANDBY
connection_retry_interval = 5
rest_request_conn_timeout = 60
rest_request_read_timeout = 300
health_check_interval = 10
heartbeat_timeout = 30

~/Envs/octavia/bin/python /usr/local/bin/octavia-api --config-file /etc/octavia/octavia.conf & echo $! >/opt/stack/status/stack/o-api.pid; fg || echo "o-api failed to start" | tee "/opt/stack/status/stack/o-api.failure"

这样，对于其他几个进程，执行如下：

export WORKON_HOME=~/Envs
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
source /usr/local/bin/virtualenvwrapper.sh && workon octavia
~/Envs/octavia/bin/python ...

=====================================================

虽然使用devstack安装的是mitaka版本的octavia，但build amphorae镜像时，默认却使用的是master分支的amphora-agent。这样就有可能导致octavia-worker与amphorae vm通信时存在一些问题。比如如下的patch：
https://github.com/openstack/octavia/commit/b89abe18718964f53b463a723551ce73673ee135
该patch在amphorae虚拟机内部引入了namespace，但mitaka的octavia-worker并不知道，在查询network interface时失败。解决办法如下：
在进行devstack安装前，在stack用户下，提前clone octavia mitaka代码，手动修改如下文件：
sed -i 's:octavia:octavia stable/mitaka:' octavia/elements/amphora-agent-ubuntu/source-repository-amphora-agent
将local.conf文件的RECLONE=False，
然后，正常安装devstack即可。

=====================================================

当devstack虚拟机重启时，需要做一些工作以保证octavia服务运行正常。

- 首先，需要启动amphorae虚拟机，以保证health monitor正常监听，防止虚拟机被failover
- 激活o-hm0虚拟网卡

    neutron port-list | grep octavia-health-manager-listen-port
    neutron port-show d4c7d881-9be4-4876-823e-024348e14331
    sudo ovs-vsctl set Interface o-hm0 type=internal -- set Interface o-hm0 external-ids:iface-status=active -- set Interface o-hm0 external-ids:attached-mac=fa:16:3e:7a:75:a5 -- set Interface o-hm0 external-ids:iface-id=d4c7d881-9be4-4876-823e-024348e14331
    sudo ip link set dev o-hm0 address fa:16:3e:7a:75:a5
    sudo dhclient -v o-hm0

- 在virtualenv中启动octavia各个服务进程
